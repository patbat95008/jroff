head	1.51;
access;
symbols;
locks;
comment	@# @;


1.51
date	2014.02.05.02.23.24;	author -;	state -;
branches;
next	1.50;

1.50
date	2014.02.04.23.31.26;	author -;	state -;
branches;
next	1.49;

1.49
date	2014.02.04.23.22.17;	author -;	state -;
branches;
next	1.48;

1.48
date	2014.02.04.23.20.59;	author -;	state -;
branches;
next	1.47;

1.47
date	2014.02.04.23.13.42;	author -;	state -;
branches;
next	1.46;

1.46
date	2014.02.04.23.13.20;	author -;	state -;
branches;
next	1.45;

1.45
date	2014.02.04.23.11.17;	author -;	state -;
branches;
next	1.44;

1.44
date	2014.02.04.23.10.28;	author -;	state -;
branches;
next	1.43;

1.43
date	2014.02.04.23.08.32;	author -;	state -;
branches;
next	1.42;

1.42
date	2014.02.04.23.07.59;	author -;	state -;
branches;
next	1.41;

1.41
date	2014.02.04.23.06.07;	author -;	state -;
branches;
next	1.40;

1.40
date	2014.02.04.23.03.58;	author -;	state -;
branches;
next	1.39;

1.39
date	2014.02.04.23.01.38;	author -;	state -;
branches;
next	1.38;

1.38
date	2014.02.04.23.01.00;	author -;	state -;
branches;
next	1.37;

1.37
date	2014.02.04.23.00.02;	author -;	state -;
branches;
next	1.36;

1.36
date	2014.02.04.22.58.58;	author -;	state -;
branches;
next	1.35;

1.35
date	2014.02.04.22.54.34;	author -;	state -;
branches;
next	1.34;

1.34
date	2014.02.04.22.53.33;	author -;	state -;
branches;
next	1.33;

1.33
date	2014.02.04.22.49.47;	author -;	state -;
branches;
next	1.32;

1.32
date	2014.02.04.22.49.11;	author -;	state -;
branches;
next	1.31;

1.31
date	2014.02.04.22.48.25;	author -;	state -;
branches;
next	1.30;

1.30
date	2014.02.04.22.47.54;	author -;	state -;
branches;
next	1.29;

1.29
date	2014.02.04.22.46.27;	author -;	state -;
branches;
next	1.28;

1.28
date	2014.02.04.22.43.50;	author -;	state -;
branches;
next	1.27;

1.27
date	2014.02.04.22.42.12;	author -;	state -;
branches;
next	1.26;

1.26
date	2014.02.04.22.40.53;	author -;	state -;
branches;
next	1.25;

1.25
date	2014.02.04.22.39.39;	author -;	state -;
branches;
next	1.24;

1.24
date	2014.02.04.22.38.59;	author -;	state -;
branches;
next	1.23;

1.23
date	2014.02.04.22.37.47;	author -;	state -;
branches;
next	1.22;

1.22
date	2014.02.04.22.36.57;	author -;	state -;
branches;
next	1.21;

1.21
date	2014.02.04.22.35.41;	author -;	state -;
branches;
next	1.20;

1.20
date	2014.02.04.22.25.56;	author -;	state -;
branches;
next	1.19;

1.19
date	2014.02.04.22.24.01;	author -;	state -;
branches;
next	1.18;

1.18
date	2014.02.04.22.22.05;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.02.04.22.21.35;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.02.04.19.52.09;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.02.04.19.15.42;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.02.04.19.14.47;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.02.04.19.13.35;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.02.04.19.12.01;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.02.04.19.10.20;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.02.04.19.09.24;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.02.04.04.14.56;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.02.04.04.13.52;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.02.04.04.03.25;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.02.04.04.00.21;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.02.04.03.52.13;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.02.04.03.50.11;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.02.04.03.48.14;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.02.04.02.50.41;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.02.02.22.15.25;	author -;	state -;
branches;
next	;


desc
@@


1.51
log
@-
@
text
@// $Id: commands.java,v 1.50 2014-02-04 15:31:26-08 - - $

import java.util.HashMap;
import static java.lang.System.*;

class commands {

   static char controlChar = '.';//control Character
   static int format = 10;//number of spaces for offset
   static int indent = 0;//number of spaces for indentation
   static int lineL = 65;//length of the line
   static int topMarginH = 6;//length of top margin
   static int pageL = 60;//length of page
   static int lineNum = 1;//number of times to make a new line
   static int lineVert = 0;//total number of lines in the page
   static int pageNum = 1;//number of pages
   static boolean dumpParagraph = false;//dumps paragraph
   static boolean isTopOfPage = false;//starts top of page mode

   private static void command_00 (String[] words) {
      // Executing a comment does nothing.
   }

   //switch to top of page mode
   private static void command_bp (String[] words) {
      isTopOfPage = true;
   }

   //calls dump paragraph
   private static void command_br (String[] words) {
      dumpParagraph = true;
   }

  //change control character, or reset to default '.'
   private static void command_cc (String[] words) {
      if(words.length<2){
      controlChar = '.';
      }else{
         controlChar = words[1].charAt(0);
      }
   }

   //indent and remember number
   private static void command_in (String[] words) {
      indent = Integer.parseInt(words[1]);
   }

   //set the line length to specified number
   private static void command_ll (String[] words) {
      lineL = Integer.parseInt(words[1]);
   }

   //height of top margin
   private static void command_mt (String[] words) {
      topMarginH = Integer.parseInt(words[1]);
   }

   //sets page length
   private static void command_pl (String[] words) {
      pageL = Integer.parseInt(words[1]);
   }

   //every line of output is preceded by
   //this number of spaces
   private static void command_po (String[] words) {
      lineNum = Integer.parseInt(words[1]);
      for(int i = 0; i < lineNum; i++){
         out.printf("\n");
      }
   }

   //dumps the paragraph and prints blank lines
   private static void command_sp (String[] words) {
      dumpParagraph = true;
      out.printf("\n");
   }

   private static void STUB (String[] words) {
      out.printf ("%s: STUB: %s",
                  auxlib.PROGNAME, auxlib.caller());
      for (String word: words) out.printf (" %s", word);
      out.printf ("%n");
   }

   public static void do_command (String[] words) {
      //makes it so that the switchcase ignores the
      //control character
      //
      //The if statement in the jroff class
      //checks for the control character
      String word = (String)words[0];
      word = word.substring(1);

      switch (word) {
         case "\\\"" : command_00 (words); break;
         case "bp"   : command_bp (words); break;
         case "br"   : command_br (words); break;
         case "cc"   : command_cc (words); break;
         case "in"   : command_in (words); break;
         case "ll"   : command_ll (words); break;
         case "mt"   : command_mt (words); break;
         case "pl"   : command_pl (words); break;
         case "po"   : command_po (words); break;
         case "sp"   : command_sp (words); break;
         default     : throw new IllegalArgumentException (words[0]);
      }
   }
} 
@


1.50
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.49 2014-02-04 15:22:17-08 - - $
d67 3
d75 1
@


1.49
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.48 2014-02-04 15:20:59-08 - - $
d14 1
a14 1
   static int lineNum = 0;//number of times to make a new line
a31 1
      //STUB (words);
a45 1
      //STUB (words);
a50 1
      //STUB (words);
a55 1
      //STUB (words);
a60 1
      //STUB (words);
a66 1
      //STUB (words);
a71 1
      //STUB (words);
a78 1
      //out.printf ("[%s]", indent);
d82 5
d89 1
a89 1
      //out.printf("%s", word);
@


1.48
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.47 2014-02-04 15:13:42-08 - - $
d40 1
a40 1
         controlChar = (Char)words[1];
@


1.47
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.46 2014-02-04 15:13:20-08 - - $
d35 1
a35 1
  //change control character
d37 5
a41 2
      controlChar = words[0].charAt(2);
      //STUB (words);
@


1.46
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.45 2014-02-04 15:11:17-08 - - $
d37 1
a37 1
      controlChar = words[0].charAt(3);
@


1.45
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.44 2014-02-04 15:10:28-08 - - $
d37 1
a37 1
      controlChar = words[1].charAt(0);
@


1.44
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.43 2014-02-04 15:08:32-08 - - $
d89 12
a100 12
      out.printf("%s", word);
      switch (words[0]) {
         case ".\\\"" : command_00 (words); break;
         case ".bp"   : command_bp (words); break;
         case ".br"   : command_br (words); break;
         case ".cc"   : command_cc (words); break;
         case ".in"   : command_in (words); break;
         case ".ll"   : command_ll (words); break;
         case ".mt"   : command_mt (words); break;
         case ".pl"   : command_pl (words); break;
         case ".po"   : command_po (words); break;
         case ".sp"   : command_sp (words); break;
@


1.43
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.42 2014-02-04 15:07:59-08 - - $
d88 1
a88 1
      String.substr(word, 1);
@


1.42
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.41 2014-02-04 15:06:07-08 - - $
d88 1
a88 1
      word.substr(word, 1);
@


1.41
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.40 2014-02-04 15:03:58-08 - - $
d88 1
a88 1
      word.substring(2);
@


1.40
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.39 2014-02-04 15:01:38-08 - - $
d88 1
a88 1
      word.substring(1);
@


1.39
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.38 2014-02-04 15:01:00-08 - - $
d87 3
a89 2
      //String word = (String)words[0];
      //words[0].substring(0);
@


1.38
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.37 2014-02-04 15:00:02-08 - - $
a74 1
      lineNum = Integer.parseInt(words[1]);
@


1.37
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.36 2014-02-04 14:58:58-08 - - $
d75 1
a75 1
      command_po(words[]);
@


1.36
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.35 2014-02-04 14:54:34-08 - - $
d75 1
a75 1
      lineNum = Integer.parseInt(words[1]);
@


1.35
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.34 2014-02-04 14:53:33-08 - - $
d75 1
a75 1
      lineNum = Integer.parseInt(words[0]);
d91 10
a100 10
         case "\\\"" : command_00 (words); break;
         case "bp"   : command_bp (words); break;
         case "br"   : command_br (words); break;
         case "cc"   : command_cc (words); break;
         case "in"   : command_in (words); break;
         case "ll"   : command_ll (words); break;
         case "mt"   : command_mt (words); break;
         case "pl"   : command_pl (words); break;
         case "po"   : command_po (words); break;
         case "sp"   : command_sp (words); break;
@


1.34
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.33 2014-02-04 14:49:47-08 - - $
d96 1
a96 1
         case ".ll"   : command_ll (words); break;
@


1.33
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.32 2014-02-04 14:49:11-08 - - $
d91 5
a95 5
         case ".\\\"" : command_00 (words); break;
         case ".bp"   : command_bp (words); break;
         case ".br"   : command_br (words); break;
         case ".cc"   : command_cc (words); break;
         case ".in"   : command_in (words); break;
d97 4
a100 4
         case ".mt"   : command_mt (words); break;
         case ".pl"   : command_pl (words); break;
         case ".po"   : command_po (words); break;
         case ".sp"   : command_sp (words); break;
@


1.32
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.31 2014-02-04 14:48:25-08 - - $
d89 1
a89 1
      words[0].substring(0);
d91 10
a100 10
         case "\\\"" : command_00 (words); break;
         case "bp"   : command_bp (words); break;
         case "br"   : command_br (words); break;
         case "cc"   : command_cc (words); break;
         case "in"   : command_in (words); break;
         case "ll"   : command_ll (words); break;
         case "mt"   : command_mt (words); break;
         case "pl"   : command_pl (words); break;
         case "po"   : command_po (words); break;
         case "sp"   : command_sp (words); break;
@


1.31
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.30 2014-02-04 14:47:54-08 - - $
d88 3
a90 3
      String word = (String)words[0];
      //word.substring(0);
      switch (word) {
@


1.30
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.29 2014-02-04 14:46:27-08 - - $
d89 1
a89 1
      word.substring(0);
@


1.29
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.28 2014-02-04 14:43:50-08 - - $
d89 1
a89 1
      string ltrim(word, commandChar);
@


1.28
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.27 2014-02-04 14:42:12-08 - - $
d89 1
a89 1
      word.substring(1);
@


1.27
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.26 2014-02-04 14:40:53-08 - - $
d89 1
a89 1
      word[0] = ' ';
@


1.26
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.25 2014-02-04 14:39:39-08 - - $
d88 2
a89 2
      //String word = (String)words[0];
      String word = substr((String)words[0], 0);
@


1.25
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.24 2014-02-04 14:38:59-08 - - $
d88 2
a89 2
      String word = (String)words[0];
      substr(word, 0);
@


1.24
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.23 2014-02-04 14:37:47-08 - - $
d89 1
a89 1
      word = substr(word, 0);
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.22 2014-02-04 14:36:57-08 - - $
d89 1
a89 1
      word.ltrim(word, '.');
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.21 2014-02-04 14:35:41-08 - - $
d89 1
a89 1
      word = ltrim(word, '.');
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.20 2014-02-04 14:25:56-08 - - $
d89 1
a89 1
      word++;
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.19 2014-02-04 14:24:01-08 - - $
d89 1
d91 10
a100 10
         case word.endsWith("\\\"") : command_00 (words); break;
         case word.endsWith("bp")   : command_bp (words); break;
         case word.endsWith("br")   : command_br (words); break;
         case word.endsWith("cc")   : command_cc (words); break;
         case word.endsWith("in")   : command_in (words); break;
         case word.endsWith("ll")   : command_ll (words); break;
         case word.endsWith("mt")   : command_mt (words); break;
         case word.endsWith("pl")   : command_pl (words); break;
         case word.endsWith("po")   : command_po (words); break;
         case word.endsWith("sp")   : command_sp (words); break;
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.18 2014-02-04 14:22:05-08 - - $
d88 12
a99 11
      switch (words[0]) {
         case words[0].endsWith("\\\"") : command_00 (words); break;
         case words[0].endsWith("bp")   : command_bp (words); break;
         case words[0].endsWith("br")   : command_br (words); break;
         case words[0].endsWith("cc")   : command_cc (words); break;
         case words[0].endsWith("in")   : command_in (words); break;
         case words[0].endsWith("ll")   : command_ll (words); break;
         case words[0].endsWith("mt")   : command_mt (words); break;
         case words[0].endsWith("pl")   : command_pl (words); break;
         case words[0].endsWith("po")   : command_po (words); break;
         case words[0].endsWith("sp")   : command_sp (words); break;
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.17 2014-02-04 14:21:35-08 - - $
d90 9
a98 9
         case .endsWith("bp")   : command_bp (words); break;
         case .endsWith("br")   : command_br (words); break;
         case .endsWith("cc")   : command_cc (words); break;
         case "in"  : command_in (words); break;
         case "ll"  : command_ll (words); break;
         case "mt"  : command_mt (words); break;
         case "pl"  : command_pl (words); break;
         case "po"  : command_po (words); break;
         case "sp"  : command_sp (words); break;
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.16 2014-02-04 11:52:09-08 - - $
d89 1
a89 1
         case .endsWith("\\\"") : command_00 (words); break;
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.15 2014-02-04 11:15:42-08 - - $
d15 2
d89 10
a98 10
         case ".\\\"": command_00 (words); break;
         case ".bp"  : command_bp (words); break;
         case ".br"  : command_br (words); break;
         case ".cc"  : command_cc (words); break;
         case ".in"  : command_in (words); break;
         case ".ll"  : command_ll (words); break;
         case ".mt"  : command_mt (words); break;
         case ".pl"  : command_pl (words); break;
         case ".po"  : command_po (words); break;
         case ".sp"  : command_sp (words); break;
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.14 2014-02-04 11:14:47-08 - - $
a24 1
      STUB (words);
d30 1
a30 1
      STUB (words);
d36 1
a36 1
      STUB (words);
d42 1
a42 1
      STUB (words);
d48 1
a48 1
      STUB (words);
d54 1
a54 1
      STUB (words);
d60 1
a60 1
      STUB (words);
d67 1
a67 1
      STUB (words);
d74 1
a74 1
      STUB (words);
d82 1
a82 1
      out.printf ("[%s]", indent);
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.13 2014-02-04 11:13:35-08 - - $
d83 1
a83 1
      out.printf ("[%s]", format);
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.12 2014-02-04 11:12:01-08 - - $
d74 1
a74 1
      lineNum = Integer.parseInt(words[1]);
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.11 2014-02-04 11:10:20-08 - - $
d36 1
a36 1
      controlChar = words[0].charAt(0);
d42 1
a42 1
      indent = Integer.parseInt(words[0]);
d54 1
a54 1
      topMarginH = Integer.parseInt(words[0]);
d60 1
a60 1
      pageL = Integer.parseInt(words[0]);
d67 1
a67 1
      lineNum = Integer.parseInt(words[0]);
d74 1
a74 1
      lineNum = Integer.parseInt(words[0]);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.10 2014-02-04 11:09:24-08 - - $
d88 2
a89 2
         case Character.toString(controlChar) + "\\\"": command_00 (words); break;
         case Character.toString(controlChar) + "bp"  : command_bp (words); break;
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.9 2014-02-03 20:14:56-08 - - $
d88 2
a89 2
         case Character.toString(commandChar) + "\\\"": command_00 (words); break;
         case Character.toString(commandChar) + "bp"  : command_bp (words); break;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.8 2014-02-03 20:13:52-08 - - $
d48 1
a48 1
      lineL = Integer.parseInt(words[0]);
d88 2
a89 2
         case ".\\\"": command_00 (words); break;
         case ".bp"  : command_bp (words); break;
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.7 2014-02-03 20:03:25-08 - - $
d54 1
a54 1
      topMarginH = Integer.parseInt(words[1]);
d60 1
a60 1
      pageL = Integer.parseInt(words[1]);
d67 1
a67 1
      lineNum = Integer.parseInt(words[1]);
d74 1
a74 1
      lineNum = Integer.parseInt(words[1]);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.6 2014-02-03 20:00:21-08 - - $
d36 1
a36 1
      controlChar = words[1].charAt(0);
d42 1
a42 1
      indent = Integer.parseInt(words[1]);
d48 1
a48 1
      lineL = Integer.parseInt(words[1]);
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.5 2014-02-03 19:52:13-08 - - $
d36 1
a36 1
      controlChar = (char)words[1];
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.4 2014-02-03 19:50:11-08 - - $
d48 1
a48 1
      lineL = (int)words[1];
d54 1
a54 1
      topMarginH = (int)words[1];
d60 1
a60 1
      pageL = (int)words[1];
d67 1
a67 1
      lineNum = (int)words[1];
d74 1
a74 1
      lineNum = (int)words[1];
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.3 2014-02-03 19:48:14-08 - - $
d34 1
a34 1
   //change control character
d42 1
a42 1
      indent = (int)words[1];
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.2 2014-02-03 18:50:41-08 - - $
d8 9
a16 9
   char controlChar = '.';//control Character
   int format = 10;//number of spaces for offset
   int indent = 0;//number of spaces for indentation
   int lineL = 65;//length of the line
   int topMarginH = 6;//length of top margin
   int pageL = 60;//length of page
   int lineNum = 0;//number of times to make a new line
   boolean dumpParagraph = false;//dumps paragraph
   boolean isTopOfPage = false;//starts top of page mode
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.1 2014-02-02 14:15:25-08 - - $
d8 10
d22 1
d24 1
d28 1
d30 1
d34 1
d36 1
d40 1
d42 1
d46 1
d48 1
d52 1
d54 1
d58 1
d60 1
d64 2
d67 1
d71 1
d73 2
d83 1
a100 12

}

class pageProp {
   boolean isTopOfPage = true;
   boolean dumpParagraph = false;
   char controlChar = '.';
   int indent = 0;
   int lineL = 65;
   int topMarginH = 3;
   int pageL = 100;
   int enterNum = 0;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: commands.java,v 1.7 2014-01-17 17:57:56-08 - - $
d73 10
@
